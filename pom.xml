<!--

    Copyright Â© 2023 JAdaptive Limited (support@jadaptive.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.sshtools</groupId>
    <artifactId>npm2mvn</artifactId>
    <version>0.9.3</version>
    <name>npm2mvn - Npm to Maven Proxy</name>
    <properties>
        <maven.compiler.target>21</maven.compiler.target>
        <maven.compiler.source>21</maven.compiler.source>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <junit.jupiter.version>5.9.2</junit.jupiter.version>
        <junit.platform.version>1.9.2</junit.platform.version>
        <surefireArgLine></surefireArgLine>
        <build.projectProperties>${basedir}/jadaptive.build.properties</build.projectProperties>
        <build.userProperties>${user.home}/.jadaptive.build.properties</build.userProperties>
        <graalvm.version>0.10.1</graalvm.version>

        <install4j.project>${project.basedir}/src/main/install4j/npm2mvn.install4j</install4j.project>
        <install4j.phase>stable</install4j.phase>
        <install4j.mediaTypes>windows,unixInstaller,macos,macosFolder,windowsArchive,unixArchive,linuxRPM,linuxDeb,macosArchive,macosFolderArchive</install4j.mediaTypes>
        <install4j.macPkcs12File>~/.jadaptive-developer-id.p12</install4j.macPkcs12File>
        <install4j.updatesBase>https://sshtools-public.s3.eu-west-1.amazonaws.com/npm2mvn</install4j.updatesBase>
        <install4j.jaulAppId>com.sshtools.Npm2Mvn</install4j.jaulAppId>
        <install4j.jaulUpdaterId>133</install4j.jaulUpdaterId>
    </properties>
    <developers>
        <developer>
            <id>brett</id>
            <email>brett@logonbox.com</email>
        </developer>
    </developers>
    <organization>
        <name>JAdapative</name>
        <url>https://jadaptive.com</url>
    </organization>
    <inceptionYear>2024</inceptionYear>
    <url>https://github.com/sshtools/npm2mvn</url>
    <description>
        Include NPM packages in your Maven projects as just another type of
        dependency. Ideal for including popular libraries in your Java web applications.
        Npm2Mvn acts as an Http server that you just add as a new repository.
        After adding the repository, use dependency tags. All NPM depdencies have a groupId
        of 'npm'

        The jar generated from the NPM package will have all of it's resources
        in a specific path that includes the package name and version, as well as a generated
        MANIFEST.MF, Graal Native Image meta-data and a pom containing further transitive
        dependencies.
    </description>
    <licenses>
        <license>
            <name>Apache License Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <scm>
        <url>https://github.com/sshtools/npm2mvn</url>
        <connection>scm:git:https://github.com/sshtools/npm2mvn.git</connection>
    </scm>
    <dependencies>
        <dependency>
            <groupId>com.sshtools</groupId>
            <artifactId>uhttpd</artifactId>
        </dependency>
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>2.0.17</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>2.0.17</version>
        </dependency>
        <dependency>
            <groupId>com.install4j</groupId>
            <artifactId>install4j-runtime</artifactId>
            <version>11.0.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.sshtools</groupId>
            <artifactId>jaul</artifactId>
            <version>0.9.22</version>
        </dependency>
        <dependency>
            <groupId>com.sshtools</groupId>
            <artifactId>tinytemplate</artifactId>
            <version>1.0.1</version>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.sshtools</groupId>
                <artifactId>uhttpd</artifactId>
                <version>0.9.11</version>
            </dependency>
            <dependency>
                <groupId>info.picocli</groupId>
                <artifactId>picocli</artifactId>
                <version>4.7.5</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>javax.json</artifactId>
                <version>1.1.4</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>1.28.0</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.19.0</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <quiet>true</quiet>
                            <files>
                                <file>${build.projectProperties}</file>
                                <file>${build.userProperties}</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M8</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>

                    <!-- The build number. This will be set to ZERO if
                    BUILD_NUMBER is not 
                        set. Jenkins will set BUILD_NUMBER, or you can set it in the environment 
                        before running maven for build testing. -->
                    <execution>
                        <id>build-number-property</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>

                            <!-- Set build.number to zero if it is blank. This
                            uses a bit of regular 
                                expression trickery. Because Jenkins supplies BUILD_NUMBER as an environment 
                                variable, and we also want the build to work outside of Jenkins, then the 
                                below is used to set build.number to zero if BUILD_NUMBER is not set. There 
                                is no easy way to do this with basic Maven, and build-helper doesn't like 
                                empty variables either, so we prefix it with zero, then use capture groups 
                                to correct the format for both situations -->

                            <name>product.version</name>
                            <value>${project.version}</value>
                            <regex>^([0-9]+)\.([0-9]+)\.([0-9]+)(-([0-9A-Za-z]+)$)?</regex>
                            <replacement>$1.$2.$3</replacement>
                            <failIfNoMatch>true</failIfNoMatch>
                        </configuration>
                    </execution>
                    <execution>
                        <id>product-version-property</id>
                        <goals>
                            <goal>regex-property</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>

                            <!-- Strip off -SNAPSHOT (or other suffix) -->

                            <name>build.number</name>
                            <value>0${env.BUILD_NUMBER}</value>
                            <regex>^(?:0?)([0-9]+)(?:\$\{env\.BUILD_NUMBER\})?$</regex>
                            <replacement>$1</replacement>
                            <failIfNoMatch>true</failIfNoMatch>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.sonatype.central</groupId>
                    <artifactId>central-publishing-maven-plugin</artifactId>
                    <version>0.8.0</version>
                    <extensions>true</extensions>
                    <configuration>
                        <autoPublish>true</autoPublish>
                        <publishingServerId>central-sshtools</publishingServerId>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.install4j</groupId>
                    <artifactId>install4j-maven</artifactId>
                    <version>11.0.5</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.graalvm.buildtools</groupId>
                    <artifactId>native-maven-plugin</artifactId>
                    <version>${graalvm.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>1.2.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.8.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ant-plugin</artifactId>
                    <version>2.3</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.6.3</version>
                    <executions>
                        <execution>
                            <id>javadoc-jar</id>
                            <phase>package</phase>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
                        <encoding>UTF-8</encoding>
                        <detectJavaApiLink>false</detectJavaApiLink>
                        <source>17</source>
                        <doclint>none</doclint>
                        <sourcepath>src/main/java</sourcepath>
                        <includeDependencySources>false</includeDependencySources>
                        <dependencySourceIncludes>
                            <dependencySourceInclude>com.sshtools:*</dependencySourceInclude>
                        </dependencySourceIncludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>3.1.0</version>
                    <executions>
                        <execution>
                            <id>sign-artifacts</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>sign</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>2.3</version>
                    <configuration>
                        <header>src/templates/APACHE-2.txt</header>
                        <properties>
                            <owner>JAdaptive Limited</owner>
                            <email>support@jadaptive.com</email>
                        </properties>
                        <excludes>
                            <exclude>**/README</exclude>
                            <exclude>src/test/resources/**</exclude>
                            <exclude>src/main/resources/**</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>check</goal>
                                <goal>format</goal>
                                <goal>remove</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.12.1</version>
                    <configuration>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>info.picocli</groupId>
                                <artifactId>picocli-codegen</artifactId>
                                <version>4.7.5</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
    <profiles>
        <profile>
            <id>release-sign-artifacts</id>
            <activation>
                <property>
                    <name>performRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.sonatype.central</groupId>
                        <artifactId>central-publishing-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <!-- Graal Native Image -->
        <profile>
            <id>native-image</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.graalvm.buildtools</groupId>
                        <artifactId>native-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>jadbus-daemon</id>
                                <goals>
                                    <goal>compile-no-fork</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <mainClass>com.sshtools.npm2mvn.Npm2Mvn</mainClass>
                                    <imageName>npm2mvn</imageName>
                                    <metadataRepository>
                                        <enabled>true</enabled>
                                    </metadataRepository>
                                    <systemPropertyVariables>
                                        <build.version>${project.version}</build.version>
                                    </systemPropertyVariables>
                                    <buildArgs>
                                        <buildArg>
                                            -H:Log=registerResource:verbose</buildArg>

                                        <!--
                                        https://github.com/oracle/graal/issues/2900 -->
                                        <buildArg>-H:+AddAllCharsets</buildArg>

                                        <buildArg>-R:MaxHeapSize=64m</buildArg>
                                        <buildArg>--install-exit-handlers</buildArg>
                                        <buildArg>--enable-http</buildArg>
                                        <buildArg>--enable-https</buildArg>
                                    </buildArgs>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>merge-installers</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.sshtools</groupId>
                        <artifactId>updatesxmlmerger-maven-plugin</artifactId>
                        <version>0.0.1</version>
                        <configuration>
                            <inputs>
                                <input>${project.build.directory}/media-macos/updates.xml</input>
                                <input>${project.build.directory}/media-windows/updates.xml</input>
                                <input>${project.build.directory}/media-linux/updates.xml</input>
                            </inputs>
                            <output>${project.build.directory}/media/updates.xml</output>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>installers</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <configuration>
                            <outputDirectory>
                                ${project.build.directory}/dependencies</outputDirectory>
                        </configuration>
                        <executions>
                            <execution>
                                <id>copy-dependencies</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <configuration>
                                    <stripVersion>true</stripVersion>
                                    <outputDirectory>
                                        ${project.build.directory}/dependencies</outputDirectory>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>com.install4j</groupId>
                        <artifactId>install4j-maven</artifactId>
                        <executions>
                            <execution>
                                <id>compile-installers</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>compile</goal>
                                </goals>
                                <configuration>
                                    <license>${install4j.testing.license}</license>
                                    <installDir>${install4j11.home}</installDir>
                                    <variables>
                                        <install4j.phase>${install4j.phase}</install4j.phase>
                                        <install4j.appleId>${install4j.appleId}</install4j.appleId>
                                        <install4j.appleId>${install4j.appleId}</install4j.appleId>
                                        <install4j.appleIdPassword>${install4j.appleIdPassword}</install4j.appleIdPassword>
                                        <install4j.appleIssuerId>${install4j.appleIssuerId}</install4j.appleIssuerId>
                                        <install4j.appleKeyId>${install4j.appleKeyId}</install4j.appleKeyId>
                                        <install4j.applePrivateKeyFile>${install4j.applePrivateKeyFile}</install4j.applePrivateKeyFile>
                                        <install4j.macPkcs12File>${install4j.macPkcs12File}</install4j.macPkcs12File>
                                        <install4j.windowsKeystoreIssuer>${install4j.windowsKeystoreIssuer}</install4j.windowsKeystoreIssuer>>
                                        <install4j.windowsKeystoreSerial>${install4j.windowsKeystoreSerial}</install4j.windowsKeystoreSerial>>
                                        <install4j.windowsKeystoreSubject>${install4j.windowsKeystoreSubject}</install4j.windowsKeystoreSubject>
                                        <install4j.windowsSigning>${install4j.windowsSigning}</install4j.windowsSigning>
                                        <install4j.updatesBase>${install4j.updatesBase}</install4j.updatesBase>
                                        <install4j.jaulAppId>${install4j.jaulAppId}</install4j.jaulAppId>
                                        <install4j.jaulUpdaterId>${install4j.jaulUpdaterId}</install4j.jaulUpdaterId>
                                        <install4j.jaulBranches>${install4j.jaulBranches}</install4j.jaulBranches>
                                    </variables>
                                    <release>${product.version}-${build.number}</release>
                                    <mediaTypes>${install4j.mediaTypes}</mediaTypes>
                                    <projectFile>${install4j.project}</projectFile>
                                
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <repositories>
        <repository>
            <id>ej</id>
            <url>https://maven.ej-technologies.com/repository/</url>
            <releases />
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>ej-technologies</id>
            <url>https://maven.ej-technologies.com/repository</url>
        </pluginRepository>
    </pluginRepositories>
</project>
